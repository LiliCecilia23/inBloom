{"version":3,"sources":["images/rightpalm.svg","images/leftpalm.svg","images/inbloom.png","images/plant1.png","images/plant2.png","images/no-plant.png","images/planty.jpg","images/yourgarden.png","images/flower.png","utils/API.js","components/Login.js","components/Palms.js","pages/Home.js","components/Logout.js","components/Button.js","components/Navbar.js","components/use-debounce.js","components/AddPlantBtn.js","components/InfoContainer.js","components/CareContainer.js","components/PlantInfo.js","components/MoreInfoBtn.js","components/SearchCard.js","components/DeleteBtn.js","components/GardenCard.js","pages/Garden.js","pages/NewUser.js","App.js","index.js"],"names":["module","exports","query","axios","get","id","plantData","post","userData","delete","data","Login","Palms","useEffect","gsap","from","duration","opacity","to","ease","transformOrigin","rotate","className","src","leftpalm","rightpalm","Home","props","inbloom","plant1","plant2","user","setUser","clientId","buttonText","onSuccess","res","console","log","profileObj","email","API","then","onFailure","alert","cookiePolicy","isSignedIn","Logout","React","useState","show","setShow","Alert","variant","onClose","dismissible","Heading","onLogoutSuccess","style","scope","width","height","theme","Button","Navbar","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","plantName","setIsSearching","setUserGarden","results","setResults","tl","TimelineLite","x","Power3","easeOut","userGarden","onClick","handleGetPlants","onSubmit","e","htmlFor","type","placeholder","onChange","preventDefault","target","getSearchTerm","isSearching","AddPlantBtn","buttonMsg","setButtonMsg","common_name","displayname","image_url","img","trefle_id","plantid","UserId","userId","setGarden","oldGarden","setModalShow","InfoContainer","edible","flower","growthform","growthhabit","growthrate","avgheight","maxheight","toxicity","CareContainer","phmin","phmax","light","bloommonths","growthmonths","humidity","minwater","maxwater","rootdepth","mintemp","maxtemp","soilnutriments","soilsalinity","soiltexture","soilhumidity","PlantInfo","sciName","plantres","scientific_name","main_species","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","alt","color","specifications","growth_form","growth_habit","growth_rate","average_height","cm","maximum_height","growth","ph_maximum","ph_minimum","bloom_months","growth_months","atmospheric_humidity","minimum_precipitation","mm","maximum_precipitation","minimum_root_depth","minimum_temperature","deg_f","maximum_temperature","soil_nutriments","soil_salinity","soil_texture","soil_humidity","Footer","onHide","addbtn","plant","MoreInfoBtn","plantID","addBtn","modalShow","plantRes","setPlantRes","plantId","result","SearchCard","fakeImg","key","DeleteBtn","GardenCard","Garden","garden","Plants","yourgarden","map","NewUser","aria-label","App","JSON","parse","sessionStorage","getItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb588fda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rightpalm.d27a76c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/leftpalm.0b40382f.svg\";","module.exports = __webpack_public_path__ + \"static/media/inbloom.c82f97ad.png\";","module.exports = __webpack_public_path__ + \"static/media/plant1.36c68f8f.png\";","module.exports = __webpack_public_path__ + \"static/media/plant2.506a618d.png\";","module.exports = __webpack_public_path__ + \"static/media/no-plant.9e0023e9.png\";","module.exports = __webpack_public_path__ + \"static/media/planty.4413f528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yourgarden.94212cfe.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.7ef5483a.png\";","import axios from \"axios\";\n\n\nexport default {\n\n  searchPlants: (query) => {\n    return axios.get('/api/trefle/search/' + query);\n  },\n\n  plantDetail: (id) => {\n    return axios.get('/api/trefle/detail/' + id);\n  },\n\n\n  // add plant\n  addPlant: function (plantData) {\n    return axios.post(\"/api/plant\", plantData);\n  },\n\n  // post request using userData from google\n  signInUser: function (userData) {\n    return axios.post(\"/api/user\", userData)\n  },\n\n  deletePlant: function (plantData) {\n    return axios.delete(`/api/plant/${plantData}`, {data: { id: plantData }}) \n  },\n\n  searchUserById: function (id) {\n    return axios.get(\"/api/user/\" + id)\n  }\n\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport API from '../utils/API';\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\n\nfunction Login(props) {\n\n\n    const onSuccess = (res) => {\n        console.log(\"[Login Success] currentUser:\", res.profileObj)\n        let userEmail = res.profileObj.email;\n        console.log(res);\n        // without authentication on the backend\n        // make api call to /api/loogin db.user.findone if one doesn't exist with googleid pass profileobj to backend and create a user with google info from state. if there is respond true, don't create new one. \n        // in callback function from api, run line below (21) to update state\n        // props.setUser(res.profileObj);\n\n// this is incorporating the backend\n\n// in future, only pass the token id @ 27 for server side authentication\nAPI.signInUser(res.profileObj).then(res=>{\n    props.setUser(res.data);\n})\n        \n    };\n\n    const onFailure = (res) => {\n        console.log(\"[Login failed] res: \", res);\n        alert(\"invalid user\");\n    };\n\n    return (\n        <div>\n            {/* the login button */}\n            <GoogleLogin \n                clientId={clientId}\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={\"single_host_origin\"}\n                isSignedIn={true}\n            />\n        </div>\n    );\n}\n\nexport default Login;","import React, {useEffect} from 'react';\nimport rightpalm from \"../images/rightpalm.svg\";\nimport leftpalm from \"../images/leftpalm.svg\";\n\nimport gsap from 'gsap';\n\n\nconst Palms = () => {\n\n\n// gsap animation\n\nuseEffect(() => {\n\n    gsap.from('.inbloom', {duration:4, opacity:0})\n    gsap.from('#login-container', {duration:4, opacity:0})\n    gsap.to('.leftpalm-1', { duration: 4, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n\n    gsap.to('.rightpalm-1', { duration: 4.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.leftpalm-2', { duration: 3, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.rightpalm-2', { duration: 3.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.leftpalm-3', { duration: 2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.rightpalm-3', { duration: 2.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.leftpalm-4', { duration: 2.2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.rightpalm-4', { duration: 2.3, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.leftpalm-5', { duration: 2.1, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.rightpalm-5', { duration: 2.1, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.leftpalm-6', { duration: 2.2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.rightpalm-6', { duration: 2, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n},\n     []);\n\n\n    return (\n        <>\n              \n    <img className=\"leftpalm-1\" src={leftpalm}></img>\n    <img className=\"rightpalm-1\" src={rightpalm}></img>\n    <img className=\"leftpalm-2\" src={leftpalm}></img>\n    <img className=\"rightpalm-2\" src={rightpalm}></img>\n    <img className=\"leftpalm-3\" src={leftpalm}></img>\n    <img className=\"rightpalm-3\" src={rightpalm}></img>\n    <img className=\"leftpalm-4\" src={leftpalm}></img>\n    <img className=\"rightpalm-4\" src={rightpalm}></img>\n    <img className=\"leftpalm-5\" src={leftpalm}></img>\n    <img className=\"rightpalm-5\" src={rightpalm}></img>\n    <img className=\"leftpalm-6\" src={leftpalm}></img> \n    <img className=\"rightpalm-6\" src={rightpalm}></img> \n   \n   \n    \n     \n \n\n        </>\n    );\n}\n\nexport default Palms;\n  \n\n\n  ","import React, {useEffect} from \"react\";\nimport Login from \"../components/Login\";\nimport { GoogleLogin } from 'react-google-login';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport inbloom from \"../images/inbloom.png\";\nimport API from '../utils/API';\nimport plant1 from '../images/plant1.png';\nimport plant2 from '../images/plant2.png';\nimport flower from '../images/flower.png';\nimport Palms from '../components/Palms';\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\n\n\nfunction Home(props) {\n    const onSuccess = (res) => {\n        console.log(\"[Login Success] currentUser:\", res.profileObj)\n        let userEmail = res.profileObj.email;\n        console.log(res);\n        // without authentication on the backend\n        // make api call to /api/loogin db.user.findone if one doesn't exist with googleid pass profileobj to backend and create a user with google info from state. if there is respond true, don't create new one. \n        // in callback function from api, run line below (21) to update state\n        // props.setUser(res.profileObj);\n\n        // this is incorporating the backend\n\n        // in future, only pass the token id @ 27 for server side authentication\n        API.signInUser(res.profileObj).then(res=>{\n        props.setUser(res.data);\n        })\n    };\n    const onFailure = (res) => {\n        console.log(\"[Login failed] res: \", res);\n        alert(\"invalid user\");\n    };\n\n\n     // Hack to hide the render of the SVG\n// requestAnimationFrame(() => {\n//     document.querySelector('.leftpalm-1, .leftpalm-2, .leftpalm-3, .leftpalm-4, .leftpalm-5, .leftpalm-6, .rightpalm-1, .rightpalm-2, .rightpalm-3, .rightpalm-4, .rightpalm-5, .rightpalm-6').style.opacity = 1;\n//   });\n\n   \n    return(\n     \n        <div>\n\n        <Palms/>\n\n            {/* the header of the homepage  */}\n            <div className=\"jumbotron bg-transparent text-center\">\n                <img className=\"inbloom\" src={inbloom}></img>\n                \n            </div>\n            {/* the google sign in button/established users */}\n            <img id=\"plant1\" src={plant1}></img>\n            <img id=\"plant2\" src={plant2}></img>\n            {/* <img id=\"plant3\" src={flower}></img> */}\n            <div className=\"container col-10 col-md-3 mx-auto text-center\" id=\"login-container\">\n                {/* <h3 className=\"lead m-5\">Sign In</h3> */}\n                <div className=\"align-middle mx-auto p-5\" id=\"googleBtn\">\n                    { !props.user && <GoogleLogin \n                        setUser={props.setUser}\n                        clientId={clientId}\n                        buttonText=\"Login\"\n                        onSuccess={onSuccess}\n                        onFailure={onFailure}\n                        cookiePolicy={\"single_host_origin\"}\n                        isSignedIn={true}\n                        />  }\n                </div>\n\n                {/* Not needed for MVP */}\n                {/* this is will the new user button to trigger the new user routes */}\n                {/* <h3 className=\"m-5\">Create Account</h3>\n                <button className=\"btn btn-outline-success\">\n                    <Link to={\"/newuser\"} />\n                    Welcome\n                </button> */}\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import { setScheduler } from \"bluebird\";\nimport React from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport Alert from \"react-bootstrap/Alert\";\n\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\nfunction Logout(props) {\n    const [show, setShow] = React.useState(false);\n\n    if (show) {\n        return (\n        <Alert variant=\"success\" onClose={() => {setShow(false); props.setUser(null)}} dismissible>\n            <Alert.Heading>Log out successful!</Alert.Heading>\n            <p>\n            We'll see you soon! 🌱\n            </p>\n        </Alert>\n        );\n    }\n\n    const onSuccess = () => {\n        console.log(\"Logout successful\");\n        setShow(true)\n        \n    };\n\n    return(\n        <div>\n            <GoogleLogout \n            clientId={clientId}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onSuccess}\n            style={{\n                scope: \"profile\",\n                width: \"240\",\n                height: \"50\",\n                'longtitle': \"true\",\n                theme: \"dark\"\n            }}\n        ></GoogleLogout>\n        </div>\n    );\n\n}\n\nexport default Logout;","import React from \"react\";\n\nfunction Button(props) {\n\n    return (\n        <div>\n            <button type=\"button\" id={props.id} className={props.className} onClick={props.onClick}>{props.text}</button>\n        </div>\n    )\n\n}\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport useDebounce from \"./use-debounce\";\nimport { gsap, TimelineLite, Power3 } from 'gsap';\nimport Logout from './Logout';\nimport API from '../utils/API';\nimport Button from \"../components/Button\";\nimport e from 'cors';\n\nfunction Navbar(props) {\n\n  // State and setter for search term\n  const [searchTerm, setSearchTerm] = useState('');\n  \n  // Now we call our hook, passing in the current searchTerm value.\n  // The hook will only return the latest value (what we passed in) ...\n  // ... if it's been more than 500ms since it was last called.\n  // Otherwise, it will return the previous value of searchTerm.\n  // The goal is to only have the API call fire when user stops typing ...\n  // ... so that we aren't hitting our API rapidly.\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n    // Here's where the API call happens\n    // We use useEffect since this is an asynchronous action\n  useEffect(\n    () => {\n      const plantName = debouncedSearchTerm;\n      // Make sure we have a value (user has entered something in input)\n      if (debouncedSearchTerm) {\n        // Set isSearching state\n        props.setIsSearching(true);\n        props.setUserGarden(true);\n        // Fire off our API call\n        API.searchPlants(plantName).then(results => {\n          // Set back to false since request finished\n          props.setIsSearching(true);\n          // Set results state\n          props.setResults(results.data);\n          // props.setIsSearching(false);\n          props.setUserGarden(false);\n        \n        });\n      } else {\n        props.setResults([]);\n      }\n    },\n    // This is the useEffect input array\n    // Our useEffect function will only execute if this value changes ...\n    // ... and thanks to our hook it will only change if the original ...\n    // value (searchTerm) hasn't changed for more than 500ms.\n    [debouncedSearchTerm]\n  );\n  \n  function getSearchTerm (e){\n    e.preventDefault();\n    setSearchTerm(e.target.value)\n  }\n\n  let tl = new TimelineLite({ delay: 0.8 })\n\n  useEffect(() => {\n    tl.from('.homes', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.1 }, 'Start')\n    tl.from('.search', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.2 }, 'Start')\n    tl.from('.contact', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.3 }, 'Start')\n  }, []);\n\n  return (\n    <div>\n      <nav id=\"navbar\" className=\"navbar navbar-light bg-light mt-n5\">\n        <div className=\"justify-content-left\">\n          <a id=\"navbar-title\" className=\"navbar-brand homes text-success\">inBloom</a>\n          {!props.userGarden && <button id=\"back-to-garden-btn\" className=\"btn\" onClick={props.handleGetPlants}>Back to Garden</button>}\n        </div> \n        <div className=\"navbar justify-content-end\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active search\">\n              <form className=\"form-inline\" onSubmit={e}>\n                <div className=\"form-group mx-sm-3 mb-2\">\n                  <label htmlFor=\"plantSearch\" className=\"sr-only\">Search : </label>\n                  <input type=\"search\" className=\"form-control\" id=\"plantSearch\" placeholder=\"Search by plant name...\" onChange={e => getSearchTerm(e)}/>\n                  {props.isSearching && <div> Searching... </div>}\n                \n                </div>\n                <li className=\"nav-item contact\">\n                  <Logout\n                  user={props.user}\n                  setUser={props.setUser}\n                  />\n                </li>\n              </form>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      {props.isSearching &&\n        <div className=\"mx-auto text-center sublead\">    \n        <h1><b>Search Results</b></h1>\n        </div>\n      }\n    </div>\n  )\n};\n\nexport default Navbar;\n","import React, {useState, useEffect} from \"react\";\n\n// Our hook\nexport default function useDebounce(value, delay) {\n\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect (\n        () => {\n            // Set debouncedValue to value (passed in) after the specified delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            // Return a cleanup function that will be called every time ...\n            // ... useEffect is re-called. useEffect will only be re-called ...\n            // ... if value changes (see the inputs array below). \n            // This is how we prevent debouncedValue from changing if value is ...\n            // ... changed within the delay period. Timeout gets cleared and restarted.\n            // To put it in context, if the user is typing within our app's ...\n            // ... search box, we don't want the debouncedValue to update until ...\n            // ... they've stopped typing for more than 500ms.\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        // Only re-call effect if value changes\n        // You could also add the \"delay\" var to inputs array if you ...\n        // ... need to be able to change that dynamically.\n        [value]\n    );\n\n    return debouncedValue;\n}","import React from \"react\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\nfunction AddPlantBtn(props) {\n    const [buttonMsg, setButtonMsg] = React.useState(\"Add to Your Garden\");\n\n    let data = {\n        common_name: props.displayname,\n        image_url: props.img,\n        trefle_id: props.plantid,\n        UserId: props.userId\n    }\n\n    function onClick () {\n        API.addPlant(data).then(res=>{\n            console.log(res.data.common_name + \" added to your garden!\");\n\n             //updates state of garden and rerenders saved plants\n\n            props.setGarden(oldGarden => {return[...oldGarden, data]});\n\n\n\n            props.setModalShow && props.setModalShow(false)\n            // we should add a toast or popup to show that the plant was added to the user's garden\n        })\n        setButtonMsg(\"Added Successfully!\")\n\n    };\n      \n    return (\n        <div>\n            <button className=\"Btn btn sublead\" onClick={() => onClick()} >{buttonMsg}</button>\n        </div>\n    )\n\n}\n\nexport default AddPlantBtn;","import React from \"react\";\n\nfunction InfoContainer(props) {\n  console.log(props);\n\n  return (\n    <div>\n      {props && (\n        <div>\n          <h5 className=\"sublead\"><b>General Info</b></h5>\n          <ul className=\"text-left sublead\">\n            {props.edible && <li>Edible: {props.edible}</li>}\n            {props.flower && <li>Flower: {props.flower}</li>}\n            {props.growthform && <li>Growth Form: {props.growthform}</li>}\n            {props.growthhabit && <li>Growth Habit: {props.growthhabit}</li>}\n            {props.growthrate && <li>Growth Rate: {props.growthrate}</li>}\n            {props.avgheight && <li>Average Height: {props.avgheight}</li>}\n            {props.maxheight && <li>Maximum Height: {props.maxheight}</li>}\n            {props.toxicity && <li>Toxicity: {props.toxicity}</li>}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default InfoContainer;\n","import React from \"react\";\n\nfunction CareContainer(props) {\n  console.log(props);\n\n  return (\n    <div>\n      {props && (\n        <div>\n          <h4 className=\"sublead\"><b>Care Info</b></h4>\n          <ul className=\"text-left sublead\">\n          {(props.phmin && props.phmax) && <li>pH Range: {props.phmin} - {props.phmax}</li>}\n            {props.light && <li>Light: {props.light}</li>}\n            {props.bloommonths && <li>Bloom Months: {props.bloommonths}</li>}\n            {props.growthmonths && <li>Growth Months: {props.growthmonths}</li>}\n            {props.humidity && <li>Humidity: {props.humidity}</li>}\n            {(props.minwater && props.maxwater) && <li>Precipitation Range: {props.minwater}mm - {props.maxwater}mm</li>}\n            {props.rootdepth && <li>Minimum Root Depth: {props.rootdepth}cm</li>}\n            {(props.mintemp && props.maxtemp) && <li>Temperature Range: {props.mintemp}ºF - {props.maxtemp}ºF</li>}\n            {props.soilnutriments && <li>Soil Nutriments: {props.soilnutriments} (pH Level)</li>}\n            {props.soilsalinity != null && <li>Soil Salinity: {props.soilsalinity}</li>}\n            {props.soiltexture && <li>Soil Texture: {props.soiltexture}</li>}\n            {props.soilhumidity && <li>Soil Humidity: {props.soilhumidity}</li>}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CareContainer;\n","import React from \"react\";\nimport AddPlantBtn from \"./AddPlantBtn\";\nimport InfoContainer from \"./InfoContainer\";\nimport Modal from \"react-bootstrap/Modal\";\nimport CareContainer from \"./CareContainer\";\nimport \"../App.css\";\n\nfunction PlantInfo(props) {\n  let sciName = \"\";\n  let edible = \"\";\n  let toxicity = \"\";\n\n  let plantData = {};\n  if (props.plantres) {\n    plantData = props.plantres;\n    if (props.plantres.data.common_name === null) {\n      sciName = \"\";\n    } else {\n      sciName = \"(\" + props.plantres.data.scientific_name + \")\";\n    }\n    if (props.plantres.data.main_species.edible === true) {\n      edible = \"Yes\";\n    } else if (!props.plantres.data.main_species.edible) {\n      edible = null;\n    } else {\n      edible = \"No\";\n    }\n    if (props.plantres.data.main_species.toxicity === true) {\n      toxicity = \"Yes\";\n    } else if (!props.plantres.data.main_species.toxicity) {\n      toxicity = null;\n    } else {\n      toxicity = \"No\";\n    }\n  } else {\n    plantData = null;\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      className=\"infoModal rounded mb-0\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"lead mx-auto\">\n          {props.displayname} {sciName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={props.img} alt=\"plant\" style={{ width: \"400px\" }} className=\"text-center modalPhoto\"></img>\n        <InfoContainer\n          id=\"infoContainer\" className=\"text-center\"\n          edible={edible}\n          // distribution={props.plantres.data.main_species.native}\n          flower={props.plantres.data.main_species.flower.color}\n          growthform={\n            props.plantres.data.main_species.specifications.growth_form\n          }\n          growthhabit={\n            props.plantres.data.main_species.specifications.growth_habit\n          }\n          growthrate={\n            props.plantres.data.main_species.specifications.growth_rate\n          }\n          avgheight={\n            props.plantres.data.main_species.specifications.average_height.cm\n          }\n          maxheight={\n            props.plantres.data.main_species.specifications.maximum_height.cm\n          }\n          toxicity={toxicity}\n        ></InfoContainer>\n        <CareContainer\n          id=\"careContainer\"\n          phmax={props.plantres.data.main_species.growth.ph_maximum}\n          phmin={props.plantres.data.main_species.growth.ph_minimum}\n          bloommonths={props.plantres.data.main_species.growth.bloom_months}\n          light={props.plantres.data.main_species.growth.light}\n          growthmonths={props.plantres.data.main_species.growth.growth_months}\n          humidity={\n            props.plantres.data.main_species.growth.atmospheric_humidity\n          }\n          minwater={\n            props.plantres.data.main_species.growth.minimum_precipitation.mm\n          }\n          maxwater={\n            props.plantres.data.main_species.growth.maximum_precipitation.mm\n          }\n          rootdepth={props.plantres.data.main_species.growth.minimum_root_depth.cm}\n          mintemp={props.plantres.data.main_species.growth.minimum_temperature.deg_f}\n          maxtemp={props.plantres.data.main_species.growth.maximum_temperature.deg_f}\n          soilnutriments={\n            props.plantres.data.main_species.growth.soil_nutriments\n          }\n          soilsalinity={props.plantres.data.main_species.growth.soil_salinity}\n          soiltexture={props.plantres.data.main_species.growth.soil_texture}\n          soilhumidity={props.plantres.data.main_species.growth.soil_humidity}\n        ></CareContainer>\n      </Modal.Body>\n      <Modal.Footer>\n        <button onClick={props.onHide} className=\"Btn sublead\">Close</button>\n        {props.addbtn === \"yes\" &&\n          <AddPlantBtn \n          setModalShow={props.setModalShow}\n          setGarden={props.setGarden}\n          plantid={props.plantid}\n          displayname={props.displayname}\n          img={props.img}\n          plant={props.plantres}\n          userId={props.user}/>\n        }\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default PlantInfo;\n","import React from \"react\";\nimport PlantInfo from \"./PlantInfo\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\n\nfunction MoreInfoBtn(props) {\n    const [modalShow, setModalShow] = React.useState(false);\n    const [plantRes, setPlantRes] = React.useState();\n\n    \n    let plantID;\n    let addBtn;\n\n    if (props.plant.trefle_id) {\n        plantID = props.plant.trefle_id;\n        addBtn = \"no\"\n    } else {\n        plantID = props.plantId;\n        addBtn= \"yes\"\n    }\n  \n\n    function getInfo () {\n        API.plantDetail(plantID).then(result => {\n            setPlantRes(result);  \n        })\n    }\n return (\n   <div>\n     <button className=\"Btn btn sublead\" onClick={() => [setModalShow(true), getInfo()]}>\n       More Info\n     </button>\n        {plantRes &&\n          <PlantInfo show={modalShow}\n            onHide={() => setModalShow(false)}\n            plantres={plantRes}\n            plantid={plantID}\n            displayname={props.displayname}\n            img={props.img}\n            user={props.user}\n            setModalShow={setModalShow}\n            addbtn={addBtn}\n            setGarden={props.setGarden}\n          />\n        }\n   </div>\n );\n}\n \nexport default MoreInfoBtn;\n","import React from \"react\";\nimport MoreInfoBtn from \"./MoreInfoBtn\";\nimport AddPlantBtn from \"./AddPlantBtn\";\nimport fakeImg from \"../images/no-plant.png\";\n\nfunction SearchCard(props) {\n  let displayname;\n  let img;\n\n  if (props.plant.common_name) {\n    displayname = props.plant.common_name;\n  } else {\n    displayname = props.plant.scientific_name;\n  }\n\n  if (!props.plant.image_url) {\n    img = fakeImg;\n  } else {\n    img = props.plant.image_url;\n  }\n  \n  return (\n    <div id=\"search-card\"\n      className=\"card m-2 p-2\"\n      key={props.plant.id}\n      style={{ width: \"350px\" }}\n    >\n      <h3 className=\"card-title\"><b>{displayname}</b></h3>\n      <img\n        src={img}\n        className=\"card-img-top mx-auto\"\n        alt={props.plant.scientific_name}\n        style={{ height: \"350px\" }}\n      />\n      \n      <AddPlantBtn\n        setGarden={props.setGarden}\n        plant={props.plant}\n        plantid={props.plant.id}\n        displayname={displayname}\n        userId={props.user}\n        img={img}\n      />\n      \n      <MoreInfoBtn\n        setGarden={props.setGarden}\n        plant={props.plant}\n        plantId={props.plant.id}\n        displayname={displayname}\n        img={img}\n        user={props.user}\n      />\n    </div>\n  );\n}\n\nexport default SearchCard;\n","import React from \"react\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\nfunction DeleteBtn(props) {\n  \n  const [buttonMsg, setButtonMsg] = React.useState(\"Delete\");\n\n  function onClick() {  \n    API.deletePlant(props.plant.id).then(res => {\n      setButtonMsg(\"Successfully Deleted\");\n      // console.log(handleGetPlants(props.user.id));\n        setTimeout(function removeFromGarden()\n        {\n          props.handleGetPlants(props.user.id);\n        }, 1000);\n    })\n  };\n\n  return (\n    <div>\n      <button className=\"Btn btn sublead\" onClick={() => onClick()} >{buttonMsg}</button>\n    </div>\n  )\n}\n\nexport default DeleteBtn;","import React from \"react\";\nimport MoreInfoBtn from \"./MoreInfoBtn\";\nimport fakeImg from \"../images/planty.jpg\";\nimport DeleteBtn from \"../components/DeleteBtn\";\n\nfunction GardenCard(props) {\n  let displayname;\n  let img;\n\n  if (props.plant.common_name) {\n    displayname = props.plant.common_name;\n  } else {\n    displayname = props.plant.scientific_name;\n  }\n\n  if (!props.plant.image_url) {\n    img = fakeImg;\n  } else {\n    img = props.plant.image_url;\n  }\n  \n  return (\n    <div\n      className=\"card m-4 p-4\"\n      key={props.plant.trefle_id}\n      style={{ width: \"350px\" }}\n    >\n      <h3 className=\"card-title\"><b>{displayname}</b></h3>\n      <img\n        src={img}\n        className=\"card-img-top mx-auto\"\n        alt={props.plant.scientific_name}\n        style={{ height: \"350px\" }}\n      />\n      <MoreInfoBtn\n        plant={props.plant}\n        plantid={props.plant.trefle_id}\n        displayname={displayname}\n        img={img}\n        user={props.user}\n      />\n      <DeleteBtn\n        plant={props.plant}\n        userGarden={props.userGarden}\n        user={props.user}\n        handleGetPlants={props.handleGetPlants}\n      />\n    </div>\n  );\n}\n\nexport default GardenCard;\n","import React, { useState, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport Navbar from \"../components/Navbar\";\nimport SearchCard from \"../components/SearchCard\";\nimport GardenCard from \"../components/GardenCard\";\nimport yourgarden from \"../images/yourgarden.png\";\nimport API from \"../utils/API\";\n\nfunction Garden(props) {\n\n     // State and setter for search results\n   const [results, setResults] = useState([]);\n   const [isSearching, setIsSearching] = useState(false);\n   const [userGarden, setUserGarden] = useState(true);\n   const [garden, setGarden] = useState([]);\n   \n   useEffect(() => {\n      console.log(props.user.id)\n      // API.searchUserById(props.user.id)\n      //    .then(res => {\n      //       setResults(res.data.Plants)\n      //    })\n      handleGetPlants();\n   }, [])\n \n   const handleGetPlants = () => {\n      API.searchUserById(props.user.id)\n      .then(results => {\n         setGarden(results.data.Plants);\n         setIsSearching(false);\n         setUserGarden(true);\n     });\n   }\n\n\n\n   \n   console.log(results)\n\n// gsap code for plant cards coming in from right \n\n\nuseEffect(() => {\n\ngsap.from('#plant-cards', {duration: 3, x:300, opacity:0})\n\n\n},\n[]);\n\n\n\n   return (\n      <div className=\"garden-body\">\n         <div className=\"jumbotron garden-jumbo\">\n            <img className=\"gardenHeader\" src={yourgarden}></img>\n         </div>\n         <Navbar setResults={setResults} \n            results={results} \n            isSearching={isSearching}\n            setIsSearching={setIsSearching} \n            setUserGarden={setUserGarden} \n            userGarden={userGarden} \n            handleGetPlants={handleGetPlants}\n            user={props.user}\n            setUser={props.setUser} \n         /> \n         \n         <div id=\"plant-cards\" className=\"row p-3 mb-5 col-md-10 mx-auto\">\n            \n            {isSearching && results.map(result => (\n                     \n               <SearchCard \n                  setGarden={setGarden}\n                  key={result.id} \n                  plant={result} \n                  user={props.user.id} \n                  userGarden={userGarden} \n               />\n                  \n            ))}\n         </div>\n      \n         <div id=\"saved-plants\" className=\"container row p-5 m-3 mx-auto col-md-8\">\n            {garden.map(result => (\n               <GardenCard \n                  key={result.id} \n                  handleGetPlants={handleGetPlants} \n                  plant={result} \n                  user={props.user.id} \n                  userGarden={userGarden} \n               />\n            ))}\n         </div>\n         \n      </div>\n   )\n\n};\n\nexport default Garden;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\"\n\nfunction NewUser() {\n\n    return(\n        <div>\n            <Navbar/>\n        <div className=\"container\">\n            <h1 className=\"text-center m-2\">Welcome to inBloom!</h1>\n            <div className=\"input-group mb-3\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" aria-label=\"Username\"/>\n            </div>\n            <div className=\"input-group mb-3\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" aria-label=\"Recipient's username\"/>\n            </div>\n            <button className=\"btn btn-outline-success\">\n                <Link to={\"/search\"} /> \n                    Add your plants!\n            </button>\n        </div>\n        </div>\n    )\n\n\n        //like a step by step form group??\n        //1. Go to the search plants page\n        //2. Either submit a photo to search or search by \"common name??\"\n        //3. Find your plant and then add it to your garden.\n    \n}\n\nexport default NewUser;","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport './App.css';\nimport PlantsPage from \"./pages/Garden\";\nimport NewUser from \"./pages/NewUser\";\n\nfunction App() {\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    setUser(JSON.parse(sessionStorage.getItem('userData')))\n  }, [])\n\n  return (\n    <Router>\n      <div>\n        {/* <Nav /> */}\n        {/* <nav>\n          <ul>\n            <li className='nav-item'>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className='nav-item'>\n              <Link to=\"/plants\">Plants</Link>\n            </li>\n            <li className='nav-item'>\n              <Link to=\"/newuser\">Users</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n\n        {/*  if they're not logged in */}\n        \n       { !user && <Switch> \n          <Route exact path={\"/\"}>\n            <Home setUser={setUser} user={user}/>\n          </Route>\n          <Route exact path={\"/newuser\"}>\n            <NewUser />\n          </Route>\n        </Switch>}\n\n        {/* if they're logged in they can access this */}\n\n        {user && <Switch>\n          <Route exact path={\"/\"}>\n            {/* <Home user={user}/> */}\n            <PlantsPage setUser={setUser} user={user}/>\n            {/* <Link to=\"/plants\">Plants</Link> */}\n          </Route>\n          {/* <Route exact path={\"/plants\"}>\n            <PlantsPage setUser={setUser} user={user}/>\n          </Route> */}\n          \n          </Switch>}\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}