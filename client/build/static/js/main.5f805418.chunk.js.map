{"version":3,"sources":["images/leftpalm.svg","images/rightpalm.svg","images/planty.jpg","images/inbloom.png","images/yourgarden.png","utils/API.js","components/Login.js","pages/Home.js","components/Logout.js","components/Button.js","components/Navbar.js","components/use-debounce.js","components/AddPlantBtn.js","components/InfoContainer.js","components/CareContainer.js","components/PlantInfo.js","components/MoreInfoBtn.js","components/SearchCard.js","components/GardenCard.js","pages/Garden.js","pages/NewUser.js","App.js","index.js"],"names":["module","exports","query","axios","get","id","plantData","post","userData","Login","Home","props","useEffect","gsap","from","duration","opacity","to","ease","transformOrigin","rotate","className","src","leftpalm","rightpalm","inbloom","user","setUser","clientId","buttonText","onSuccess","res","console","log","profileObj","email","API","then","data","onFailure","alert","cookiePolicy","isSignedIn","Logout","React","useState","show","setShow","Alert","variant","onClose","dismissible","Heading","onLogoutSuccess","style","scope","width","height","theme","Button","type","onClick","text","Navbar","searchTerm","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","plantName","setIsSearching","setUserGarden","results","setResults","tl","TimelineLite","x","Power3","easeOut","href","userGarden","handleGetPlants","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onSubmit","e","preventDefault","htmlFor","placeholder","onChange","target","getSearchTerm","isSearching","AddPlantBtn","buttonMsg","setButtonMsg","common_name","displayname","image_url","img","trefle_id","plant","UserId","userId","InfoContainer","edible","flower","growthform","growthhabit","growthrate","avgheight","maxheight","toxicity","CareContainer","phmin","phmax","light","bloommonths","growthmonths","humidity","minwater","maxwater","rootdepth","mintemp","maxtemp","soilnutriments","soilsalinity","soiltexture","soilhumidity","PlantInfo","sciName","plantres","scientific_name","main_species","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","alt","color","specifications","growth_form","growth_habit","growth_rate","average_height","cm","maximum_height","growth","ph_maximum","ph_minimum","bloom_months","growth_months","atmospheric_humidity","minimum_precipitation","mm","maximum_precipitation","minimum_root_depth","minimum_temperature","deg_f","maximum_temperature","soil_nutriments","soil_salinity","soil_texture","soil_humidity","Footer","onHide","addbtn","MoreInfoBtn","plantID","addBtn","modalShow","setModalShow","plantRes","setPlantRes","plantId","result","SearchCard","fakeImg","key","GardenCard","Garden","garden","setGarden","Plants","yourgarden","map","NewUser","App","JSON","parse","sessionStorage","getItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,wCCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,4LCG5B,EAEC,SAACC,GACb,OAAOC,IAAMC,IAAI,sBAAwBF,IAH9B,EAMA,SAACG,GACZ,OAAOF,IAAMC,IAAI,sBAAwBC,IAP9B,EAYH,SAAUC,GAClB,OAAOH,IAAMI,KAAK,aAAcD,IAbrB,EAiBD,SAAUE,GACpB,OAAOL,IAAMI,KAAK,YAAaC,IAlBpB,EAqBG,SAAUH,GACxB,OAAOF,IAAMC,IAAI,aAAeC,IC2BrBI,I,0DCiEAC,MAvGf,SAAcC,GAiDV,OAzBJC,qBAAU,WAENC,IAAKC,KAAK,WAAY,CAACC,SAAS,EAAGC,QAAQ,IAC3CH,IAAKI,GAAG,cAAe,CAAEF,SAAU,EAAGG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KACjGP,IAAKI,GAAG,cAAe,CAAEF,SAAU,EAAGG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KACjGP,IAAKI,GAAG,cAAe,CAAEF,SAAU,EAAGG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KACjGP,IAAKI,GAAG,cAAe,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KACnGP,IAAKI,GAAG,cAAe,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KACnGP,IAAKI,GAAG,cAAe,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,cAAeC,QAAS,KAEnGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,KACpGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,KACpGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,KACpGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,KACpGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,IAAKG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,KACpGP,IAAKI,GAAG,eAAgB,CAAEF,SAAU,EAAGG,KAAM,WAAYC,gBAAiB,eAAgBC,OAAQ,OAEjG,IAUG,6BAGI,yBAAKC,UAAU,aAAaC,IAAKC,MACjC,yBAAKF,UAAU,aAAaC,IAAKC,MACjC,yBAAKF,UAAU,aAAaC,IAAKC,MACjC,yBAAKF,UAAU,aAAaC,IAAKC,MACjC,yBAAKF,UAAU,aAAaC,IAAKC,MACjC,yBAAKF,UAAU,aAAaC,IAAKC,MAGjC,yBAAKF,UAAU,cAAcC,IAAKE,MAClC,yBAAKH,UAAU,cAAcC,IAAKE,MAClC,yBAAKH,UAAU,cAAcC,IAAKE,MAClC,yBAAKH,UAAU,cAAcC,IAAKE,MAClC,yBAAKH,UAAU,cAAcC,IAAKE,MAClC,yBAAKH,UAAU,cAAcC,IAAKE,MAGlC,yBAAKH,UAAU,wCACX,yBAAKA,UAAU,UAAUC,IAAKG,OAIlC,yBAAKJ,UAAU,4CAGTV,EAAMe,MAAQ,kBAAC,cAAD,CAChBC,QAAShB,EAAMgB,QACfC,SApFC,0EAqFDC,WAAW,QACXC,UAjFM,SAACC,GACfC,QAAQC,IAAI,+BAAgCF,EAAIG,YAChCH,EAAIG,WAAWC,MAC/BH,QAAQC,IAAIF,GASZK,EAAeL,EAAIG,YAAYG,MAAK,SAAAN,GACpCpB,EAAMgB,QAAQI,EAAIO,UAqEVC,UAlEM,SAACR,GACfC,QAAQC,IAAI,uBAAwBF,GACpCS,MAAM,iBAiEEC,aAAc,qBACdC,YAAY,O,iCCpDbC,MAvCf,SAAgBhC,GAAQ,IAAD,EACKiC,IAAMC,UAAS,GADpB,mBACZC,EADY,KACNC,EADM,KAGnB,OAAID,EAEA,kBAACE,EAAA,EAAD,CAAOC,QAAQ,UAAUC,QAAS,WAAOH,GAAQ,GAAQpC,EAAMgB,QAAQ,OAAQwB,aAAW,GACtF,kBAACH,EAAA,EAAMI,QAAP,4BACA,gEAcJ,6BACI,kBAAC,eAAD,CACAxB,SAzBK,0EA0BLC,WAAW,SACXwB,gBAXU,WACdrB,QAAQC,IAAI,qBACZc,GAAQ,IAUJO,MAAO,CACHC,MAAO,UACPC,MAAO,MACPC,OAAQ,KACR,UAAa,OACbC,MAAO,YC3BRC,MAVf,SAAgBhD,GAEZ,OACI,6BACI,4BAAQiD,KAAK,SAASvD,GAAIM,EAAMN,GAAIgB,UAAWV,EAAMU,UAAWwC,QAASlD,EAAMkD,SAAUlD,EAAMmD,Q,MCsG5FC,MApGf,SAAgBpD,GAAO,MAGiBkC,mBAAS,IAH1B,mBAGZmB,EAHY,KAGAC,EAHA,KAWbC,EChBK,SAAqBC,EAAOC,GAAO,MAGFvB,mBAASsB,GAHP,mBAGvCE,EAHuC,KAGvBC,EAHuB,KA+B9C,OA1BA1D,qBACI,WAEI,IAAM2D,EAAUC,YAAW,WACvBF,EAAkBH,KACnBC,GAWH,OAAO,WACHK,aAAaF,MAMrB,CAACJ,IAGEE,EDfqBK,CAAYV,EAAY,KAIpDpD,qBACE,WACE,IAAM+D,EAAYT,EAEdA,GAEFvD,EAAMiE,gBAAe,GACrBjE,EAAMkE,eAAc,GAEpBzC,EAAiBuC,GAAWtC,MAAK,SAAAyC,GAE/BnE,EAAMiE,gBAAe,GAErBjE,EAAMoE,WAAWD,EAAQxC,MAEzB3B,EAAMkE,eAAc,OAItBlE,EAAMoE,WAAW,MAOrB,CAACb,IAQH,IAAIc,EAAK,IAAIC,IAAa,CAAEb,MAAO,KASnC,OAPAxD,qBAAU,WAENoE,EAAGlE,KAAK,SAAU,CAAEoE,EAAG,GAAIlE,QAAS,EAAGE,KAAMiE,IAAOC,QAAShB,MAAO,IAAO,SAC3EY,EAAGlE,KAAK,UAAW,CAAEoE,EAAG,GAAIlE,QAAS,EAAGE,KAAMiE,IAAOC,QAAShB,MAAO,IAAO,SAC5EY,EAAGlE,KAAK,WAAY,CAAEoE,EAAG,GAAIlE,QAAS,EAAGE,KAAMiE,IAAOC,QAAShB,MAAO,IAAO,WAC9E,IAGD,6BACA,yBAAK/D,GAAG,SAASgB,UAAU,uDACzB,uBAAGhB,GAAG,eAAegB,UAAU,kCAAkCgE,KAAK,KAAtE,YAEE1E,EAAM2E,YAAc,kBAAC,EAAD,CAAQxB,KAAK,iBAAiBzD,GAAG,qBAAqBgB,UAAU,0BAA0BwC,QAASlD,EAAM4E,kBAC/H,4BAAQlE,UAAU,iBAAiBuC,KAAK,SAAS4B,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBAC1J,0BAAMvE,UAAU,yBAGlB,yBAAKA,UAAU,+CAA+ChB,GAAG,aAC/D,wBAAIgB,UAAU,cAEZ,wBAAIA,UAAU,0BACd,0BAAMA,UAAU,cAAcwE,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAC3C,yBAAK1E,UAAU,2BACb,2BAAO2E,QAAQ,cAAc3E,UAAU,WAAvC,aACA,2BAAOuC,KAAK,SAASvC,UAAU,eAAehB,GAAG,cAAc4F,YAAY,0BAA0BC,SAAU,SAAAJ,GAAC,OAhC5H,SAAwBA,GACtBA,EAAEC,iBACF9B,EAAc6B,EAAEK,OAAOhC,OACvBnC,QAAQC,IAAI,gBA6BkHmE,CAAcN,MACjInF,EAAM0F,aAAe,kDAK5B,wBAAIhF,UAAU,oBACZ,kBAAC,EAAD,CACAK,KAAMf,EAAMe,KACZC,QAAShB,EAAMgB,cAOtBhB,EAAM0F,aACL,yBAAKhF,UAAU,+BACf,4BAAI,iDEtEGiF,MA3Bf,SAAqB3F,GAAQ,IAAD,EACUiC,IAAMC,SAAS,sBADzB,mBACjB0D,EADiB,KACNC,EADM,KAGpBlE,EAAO,CACPmE,YAAa9F,EAAM+F,YACnBC,UAAWhG,EAAMiG,IACjBC,UAAWlG,EAAMmG,MAAMzG,GACvB0G,OAAQpG,EAAMqG,QAYlB,OACI,6BACI,4BAAQ3F,UAAU,kBAAkBwC,QAAS,kBAVjDzB,EAAaE,GAAMD,MAAK,SAAAN,GACpBC,QAAQC,IAAIF,EAAIO,KAAKmE,YAAc,kCAGvCD,EAAa,yBAMuDD,KCC7DU,MAxBf,SAAuBtG,GAGrB,OAFAqB,QAAQC,IAAItB,GAGV,6BACGA,GACC,6BACE,wBAAIU,UAAU,WAAU,4CACxB,wBAAIA,UAAU,qBACXV,EAAMuG,QAAU,uCAAavG,EAAMuG,QACnCvG,EAAMwG,QAAU,uCAAaxG,EAAMwG,QACnCxG,EAAMyG,YAAc,4CAAkBzG,EAAMyG,YAC5CzG,EAAM0G,aAAe,6CAAmB1G,EAAM0G,aAC9C1G,EAAM2G,YAAc,4CAAkB3G,EAAM2G,YAC5C3G,EAAM4G,WAAa,+CAAqB5G,EAAM4G,WAC9C5G,EAAM6G,WAAa,+CAAqB7G,EAAM6G,WAC9C7G,EAAM8G,UAAY,yCAAe9G,EAAM8G,c,QCYrCC,MA5Bf,SAAuB/G,GAGrB,OAFAqB,QAAQC,IAAItB,GAGV,6BACGA,GACC,6BACE,wBAAIU,UAAU,WAAU,yCACxB,wBAAIA,UAAU,qBACZV,EAAMgH,OAAShH,EAAMiH,OAAU,yCAAejH,EAAMgH,MAArB,MAA+BhH,EAAMiH,OACnEjH,EAAMkH,OAAS,sCAAYlH,EAAMkH,OACjClH,EAAMmH,aAAe,6CAAmBnH,EAAMmH,aAC9CnH,EAAMoH,cAAgB,8CAAoBpH,EAAMoH,cAChDpH,EAAMqH,UAAY,yCAAerH,EAAMqH,UACtCrH,EAAMsH,UAAYtH,EAAMuH,UAAa,oDAA0BvH,EAAMsH,SAAhC,QAA+CtH,EAAMuH,SAArD,MACtCvH,EAAMwH,WAAa,mDAAyBxH,EAAMwH,UAA/B,MAClBxH,EAAMyH,SAAWzH,EAAM0H,SAAY,kDAAwB1H,EAAMyH,QAA9B,WAA4CzH,EAAM0H,QAAlD,SACpC1H,EAAM2H,gBAAkB,gDAAsB3H,EAAM2H,eAA5B,eACF,MAAtB3H,EAAM4H,cAAwB,8CAAoB5H,EAAM4H,cACxD5H,EAAM6H,aAAe,6CAAmB7H,EAAM6H,aAC9C7H,EAAM8H,cAAgB,8CAAoB9H,EAAM8H,kBC8F9CC,MA7Gf,SAAmB/H,GACjB,IAAIgI,EAAU,GACVzB,EAAS,GACTO,EAAW,GA4Bf,OAzBI9G,EAAMiI,UACIjI,EAAMiI,SAEhBD,EADsC,OAApChI,EAAMiI,SAAStG,KAAKmE,YACZ,GAEA,IAAM9F,EAAMiI,SAAStG,KAAKuG,gBAAkB,IAGtD3B,GAD8C,IAA5CvG,EAAMiI,SAAStG,KAAKwG,aAAa5B,OAC1B,MACCvG,EAAMiI,SAAStG,KAAKwG,aAAa5B,OAGlC,KAFA,KAKTO,GADgD,IAA9C9G,EAAMiI,SAAStG,KAAKwG,aAAarB,SACxB,MACD9G,EAAMiI,SAAStG,KAAKwG,aAAarB,SAGhC,KAFA,MAKD,KAIZ,kBAACsB,EAAA,EAAD,iBACMpI,EADN,CAEEqI,KAAK,KACL3H,UAAU,yBACV4H,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,CAAahJ,GAAG,gCAAgCgB,UAAU,gBACvDV,EAAM+F,YADT,IACuBiC,IAGzB,kBAACI,EAAA,EAAMO,KAAP,KACE,yBAAKhI,IAAKX,EAAMiG,IAAK2C,IAAI,QAAQjG,MAAO,CAAEE,MAAO,SAAWnC,UAAU,2BACtE,kBAAC,EAAD,CACEhB,GAAG,gBAAgBgB,UAAU,cAC7B6F,OAAQA,EAERC,OAAQxG,EAAMiI,SAAStG,KAAKwG,aAAa3B,OAAOqC,MAChDpC,WACEzG,EAAMiI,SAAStG,KAAKwG,aAAaW,eAAeC,YAElDrC,YACE1G,EAAMiI,SAAStG,KAAKwG,aAAaW,eAAeE,aAElDrC,WACE3G,EAAMiI,SAAStG,KAAKwG,aAAaW,eAAeG,YAElDrC,UACE5G,EAAMiI,SAAStG,KAAKwG,aAAaW,eAAeI,eAAeC,GAEjEtC,UACE7G,EAAMiI,SAAStG,KAAKwG,aAAaW,eAAeM,eAAeD,GAEjErC,SAAUA,IAEZ,kBAAC,EAAD,CACEpH,GAAG,gBACHuH,MAAOjH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOC,WAC/CtC,MAAOhH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOE,WAC/CpC,YAAanH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOG,aACrDtC,MAAOlH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOnC,MAC/CE,aAAcpH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOI,cACtDpC,SACErH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOK,qBAE1CpC,SACEtH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOM,sBAAsBC,GAEhErC,SACEvH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOQ,sBAAsBD,GAEhEpC,UAAWxH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOS,mBAAmBX,GACtE1B,QAASzH,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOU,oBAAoBC,MACrEtC,QAAS1H,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOY,oBAAoBD,MACrErC,eACE3H,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOa,gBAE1CtC,aAAc5H,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOc,cACtDtC,YAAa7H,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOe,aACrDtC,aAAc9H,EAAMiI,SAAStG,KAAKwG,aAAakB,OAAOgB,iBAG1D,kBAACjC,EAAA,EAAMkC,OAAP,KACE,4BAAQpH,QAASlD,EAAMuK,OAAQ7J,UAAU,eAAzC,SACkB,QAAjBV,EAAMwK,QACL,kBAAC,EAAD,CACAzE,YAAa/F,EAAM+F,YACnBC,UAAWhG,EAAMiG,IACjBE,MAAOnG,EAAMiI,SACb5B,OAAQrG,EAAMe,UC9DT0J,MAzCf,SAAqBzK,GAAQ,IAKrB0K,EACAC,EANoB,EACU1I,IAAMC,UAAS,GADzB,mBACjB0I,EADiB,KACNC,EADM,OAEQ5I,IAAMC,WAFd,mBAEjB4I,EAFiB,KAEPC,EAFO,KAsB3B,OAdO/K,EAAMkG,WACNwE,EAAU1K,EAAMkG,UAChByE,EAAS,OAETD,EAAU1K,EAAMgL,QAChBL,EAAQ,OAUb,6BACE,4BAAQjK,UAAU,kBAAkBwC,QAAS,iBAAM,CAAC2H,GAAa,QAN9DpJ,EAAgBiJ,GAAShJ,MAAK,SAAAuJ,GAC1BF,EAAYE,SAKnB,aAGIH,GACC,kBAAC,EAAD,CAAW3I,KAAMyI,EACfL,OAAQ,kBAAMM,GAAa,IAC3B5C,SAAU6C,EACV/E,YAAa/F,EAAM+F,YACnBE,IAAKjG,EAAMiG,IACXlF,KAAMf,EAAMe,KACZyJ,OAAQG,M,iBCaLO,MAhDf,SAAoBlL,GAClB,IAAI+F,EACAE,EAcJ,OAXEF,EADE/F,EAAMmG,MAAML,YACA9F,EAAMmG,MAAML,YAEZ9F,EAAMmG,MAAM+B,gBAM1BjC,EAHGjG,EAAMmG,MAAMH,UAGThG,EAAMmG,MAAMH,UAFZmF,IAMN,yBAAKzL,GAAG,cACNgB,UAAU,eACV0K,IAAKpL,EAAMmG,MAAMzG,GACjBiD,MAAO,CAAEE,MAAO,UAEhB,wBAAInC,UAAU,cAAa,2BAAIqF,IAC/B,yBACEpF,IAAKsF,EACLvF,UAAU,uBACVkI,IAAK5I,EAAMmG,MAAM+B,gBACjBvF,MAAO,CAAEG,OAAQ,WAGnB,kBAAC,EAAD,CACEqD,MAAOnG,EAAMmG,MACbJ,YAAaA,EACbM,OAAQrG,EAAMe,KACdkF,IAAKA,IAGP,kBAAC,EAAD,CACEE,MAAOnG,EAAMmG,MACb6E,QAAShL,EAAMmG,MAAMzG,GACrBqG,YAAaA,EACbE,IAAKA,EACLlF,KAAMf,EAAMe,SCHLsK,MAxCf,SAAoBrL,GAClB,IAAI+F,EACAE,EAcJ,OAXEF,EADE/F,EAAMmG,MAAML,YACA9F,EAAMmG,MAAML,YAEZ9F,EAAMmG,MAAM+B,gBAM1BjC,EAHGjG,EAAMmG,MAAMH,UAGThG,EAAMmG,MAAMH,UAFZmF,IAMN,yBACEzK,UAAU,eACV0K,IAAKpL,EAAMmG,MAAMD,UACjBvD,MAAO,CAAEE,MAAO,UAEhB,wBAAInC,UAAU,cAAa,2BAAIqF,IAC/B,yBACEpF,IAAKsF,EACLvF,UAAU,uBACVkI,IAAK5I,EAAMmG,MAAM+B,gBACjBvF,MAAO,CAAEG,OAAQ,WAEnB,kBAAC,EAAD,CACEqD,MAAOnG,EAAMmG,MACbD,UAAWlG,EAAMmG,MAAMD,UACvBH,YAAaA,EACbE,IAAKA,EACLlF,KAAMf,EAAMe,S,iBCkDLuK,MAhFf,SAAgBtL,GAAO,MAGUkC,mBAAS,IAHnB,mBAGbiC,EAHa,KAGJC,EAHI,OAIkBlC,oBAAS,GAJ3B,mBAIbwD,EAJa,KAIAzB,EAJA,OAKgB/B,oBAAS,GALzB,mBAKbyC,EALa,KAKDT,EALC,OAMQhC,mBAAS,IANjB,mBAMbqJ,EANa,KAMLC,EANK,KAQpBvL,qBAAU,WACPoB,QAAQC,IAAItB,EAAMe,KAAKrB,IAKvBkF,MACA,IAEH,IAAMA,EAAkB,WACrBnD,EAAmBzB,EAAMe,KAAKrB,IAC7BgC,MAAK,SAAAyC,GACHqH,EAAUrH,EAAQxC,KAAK8J,QACvBxH,GAAe,GACfC,GAAc,OAsBpB,OAfA7C,QAAQC,IAAI6C,GAKflE,qBAAU,WAEVC,IAAKC,KAAK,eAAgB,CAACC,SAAU,EAAGmE,EAAE,IAAKlE,QAAQ,MAIvD,IAKM,yBAAKK,UAAU,eACZ,yBAAKA,UAAU,0BACZ,yBAAKA,UAAU,eAAeC,IAAK+K,OAEtC,kBAAC,EAAD,CAAQtH,WAAYA,EACjBD,QAASA,EACTuB,YAAaA,EACbzB,eAAgBA,EAChBC,cAAeA,EACfS,WAAYA,EACZC,gBAAiBA,EACjB7D,KAAMf,EAAMe,KACZC,QAAShB,EAAMgB,UAGlB,yBAAKtB,GAAG,cAAcgB,UAAU,kCAE5BgF,GAAevB,EAAQwH,KAAI,SAAAV,GAAM,OAE/B,kBAAC,EAAD,CAAYG,IAAKH,EAAOvL,GAAIyG,MAAO8E,EAAQlK,KAAMf,EAAMe,KAAKrB,GAAIiF,WAAYA,QAKlF,yBAAKjF,GAAG,eAAegB,UAAU,0CAC7B6K,EAAOI,KAAI,SAAAV,GAAM,OACf,kBAAC,EAAD,CAAYG,IAAKH,EAAOvL,GAAIyG,MAAO8E,EAAQlK,KAAMf,EAAMe,KAAKrB,GAAIiF,WAAYA,UC9C5EiH,MA7Bf,WAEI,OACI,6BACI,kBAAC,EAAD,MACJ,yBAAKlL,UAAU,aACX,wBAAIA,UAAU,mBAAd,uBACA,yBAAKA,UAAU,oBACX,2BAAOuC,KAAK,OAAOvC,UAAU,eAAe4E,YAAY,aAAaL,aAAW,cAEpF,yBAAKvE,UAAU,oBACX,2BAAOuC,KAAK,OAAOvC,UAAU,eAAe4E,YAAY,YAAYL,aAAW,0BAEnF,4BAAQvE,UAAU,2BACd,kBAAC,IAAD,CAAMJ,GAAI,YADd,uBC8CGuL,MAxDf,WAAgB,IAAD,EAEW3J,qBAFX,mBAENnB,EAFM,KAEAC,EAFA,KAOb,OAJAf,qBAAU,WACRe,EAAQ8K,KAAKC,MAAMC,eAAeC,QAAQ,gBACzC,IAGD,kBAAC,IAAD,KACE,8BAmBIlL,GAAQ,kBAAC,IAAD,KACR,kBAAC,IAAD,CAAOmL,OAAK,EAACC,KAAM,KACjB,kBAAC,EAAD,CAAMnL,QAASA,EAASD,KAAMA,KAEhC,kBAAC,IAAD,CAAOmL,OAAK,EAACC,KAAM,YACjB,kBAAC,EAAD,QAMHpL,GAAQ,kBAAC,IAAD,KACP,kBAAC,IAAD,CAAOmL,OAAK,EAACC,KAAM,KAEjB,kBAAC,EAAD,CAAYnL,QAASA,EAASD,KAAMA,S,MC1ChDqL,IAASC,OACL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f805418.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leftpalm.0b40382f.svg\";","module.exports = __webpack_public_path__ + \"static/media/rightpalm.d27a76c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/planty.4413f528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/inbloom.c82f97ad.png\";","module.exports = __webpack_public_path__ + \"static/media/yourgarden.94212cfe.png\";","import axios from \"axios\";\n\n\nexport default {\n\n  searchPlants: (query) => {\n    return axios.get('/api/trefle/search/' + query);\n  },\n\n  plantDetail: (id) => {\n    return axios.get('/api/trefle/detail/' + id);\n  },\n\n\n  // add plant\n  addPlant: function (plantData) {\n    return axios.post(\"/api/plant\", plantData);\n  },\n\n  // post request using userData from google\n  signInUser: function (userData) {\n    return axios.post(\"/api/user\", userData)\n  },\n\n  searchUserById: function (id) {\n    return axios.get(\"/api/user/\" + id)\n  }\n\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport API from '../utils/API';\n// import { refreshTokenSetup } from '../utils/refreshToken';\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\n\nfunction Login(props) {\n\n\n    const onSuccess = (res) => {\n        console.log(\"[Login Success] currentUser:\", res.profileObj)\n        let userEmail = res.profileObj.email;\n        console.log(res);\n        // without authentication on the backend\n        // make api call to /api/loogin db.user.findone if one doesn't exist with googleid pass profileobj to backend and create a user with google info from state. if there is respond true, don't create new one. \n        // in callback function from api, run line below (21) to update state\n        // props.setUser(res.profileObj);\n\n// this is incorporating the backend\n\n// in future, only pass the token id @ 27 for server side authentication\nAPI.signInUser(res.profileObj).then(res=>{\n    props.setUser(res.data);\n})\n        \n    };\n\n    const onFailure = (res) => {\n        console.log(\"[Login failed] res: \", res);\n        alert(\"invalid user\");\n    };\n\n    return (\n        <div>\n            {/* the login button */}\n            <GoogleLogin \n                clientId={clientId}\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={\"single_host_origin\"}\n                isSignedIn={true}\n            />\n        </div>\n    );\n}\n\nexport default Login;","import React, {useEffect} from \"react\";\nimport Login from \"../components/Login\";\nimport { GoogleLogin } from 'react-google-login';\nimport gsap, {Power1} from 'gsap';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport inbloom from \"../images/inbloom.png\";\nimport leftpalm from \"../images/leftpalm.svg\";\nimport rightpalm from \"../images/rightpalm.svg\";\nimport API from '../utils/API';\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\n\n\nfunction Home(props) {\n    const onSuccess = (res) => {\n        console.log(\"[Login Success] currentUser:\", res.profileObj)\n        let userEmail = res.profileObj.email;\n        console.log(res);\n        // without authentication on the backend\n        // make api call to /api/loogin db.user.findone if one doesn't exist with googleid pass profileobj to backend and create a user with google info from state. if there is respond true, don't create new one. \n        // in callback function from api, run line below (21) to update state\n        // props.setUser(res.profileObj);\n\n        // this is incorporating the backend\n\n        // in future, only pass the token id @ 27 for server side authentication\n        API.signInUser(res.profileObj).then(res=>{\n        props.setUser(res.data);\n        })\n    };\n    const onFailure = (res) => {\n        console.log(\"[Login failed] res: \", res);\n        alert(\"invalid user\");\n    };\n\n// gsap animation\n\nuseEffect(() => {\n\n    gsap.from('.inbloom', {duration:4, opacity:0})\n    gsap.to('.leftpalm-1', { duration: 4, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.leftpalm-2', { duration: 3, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.leftpalm-3', { duration: 2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.leftpalm-4', { duration: 2.2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.leftpalm-5', { duration: 2.1, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n    gsap.to('.leftpalm-6', { duration: 2.2, ease: \"slow.out\", transformOrigin: 'left bottom', rotate: -75 })\n\n    gsap.to('.rightpalm-1', { duration: 4.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.rightpalm-2', { duration: 3.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.rightpalm-3', { duration: 2.5, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.rightpalm-4', { duration: 2.3, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.rightpalm-5', { duration: 2.1, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n    gsap.to('.rightpalm-6', { duration: 2, ease: \"slow.out\", transformOrigin: 'right bottom', rotate: 75 })\n},\n     []);\n\n     // Hack to hide the render of the SVG\n// requestAnimationFrame(() => {\n//     document.querySelector('.leftpalm-1, .leftpalm-2, .leftpalm-3, .leftpalm-4, .leftpalm-5, .leftpalm-6, .rightpalm-1, .rightpalm-2, .rightpalm-3, .rightpalm-4, .rightpalm-5, .rightpalm-6').style.opacity = 1;\n//   });\n\n   \n    return(\n     \n        <div>\n\n            {/* left palm leaves */}\n            <img className=\"leftpalm-1\" src={leftpalm}></img>\n            <img className=\"leftpalm-2\" src={leftpalm}></img>\n            <img className=\"leftpalm-3\" src={leftpalm}></img>\n            <img className=\"leftpalm-4\" src={leftpalm}></img>\n            <img className=\"leftpalm-5\" src={leftpalm}></img>\n            <img className=\"leftpalm-6\" src={leftpalm}></img>\n            \n            {/* right palm leaves */}\n            <img className=\"rightpalm-1\" src={rightpalm}></img>\n            <img className=\"rightpalm-2\" src={rightpalm}></img>\n            <img className=\"rightpalm-3\" src={rightpalm}></img>\n            <img className=\"rightpalm-4\" src={rightpalm}></img>\n            <img className=\"rightpalm-5\" src={rightpalm}></img>\n            <img className=\"rightpalm-6\" src={rightpalm}></img>\n\n            {/* the header of the homepage  */}\n            <div className=\"jumbotron bg-transparent text-center\">\n                <img className=\"inbloom\" src={inbloom}></img>\n                \n            </div>\n            {/* the google sign in button/established users */}\n            <div className=\"container m-5 col-4 mx-auto text-center\">\n                {/* <h3 className=\"lead m-5\">Sign In</h3> */}\n                \n               { !props.user && <GoogleLogin \n                setUser={props.setUser}\n                clientId={clientId}\n                buttonText=\"Login\"\n                onSuccess={onSuccess}\n                onFailure={onFailure}\n                cookiePolicy={\"single_host_origin\"}\n                isSignedIn={true}\n            />  }\n\n\n                {/* Not needed for MVP */}\n                {/* this is will the new user button to trigger the new user routes */}\n                {/* <h3 className=\"m-5\">Create Account</h3>\n                <button className=\"btn btn-outline-success\">\n                    <Link to={\"/newuser\"} />\n                    Welcome\n                </button> */}\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import { setScheduler } from \"bluebird\";\nimport React from \"react\";\nimport { GoogleLogout } from \"react-google-login\";\nimport Alert from \"react-bootstrap/Alert\";\n\n\nconst clientId = \"21199057526-pc5p89vu1fos35ufcd9m597mmd84aq88.apps.googleusercontent.com\";\n\nfunction Logout(props) {\n    const [show, setShow] = React.useState(false);\n\n    if (show) {\n        return (\n        <Alert variant=\"success\" onClose={() => {setShow(false); props.setUser(null)}} dismissible>\n            <Alert.Heading>Log out successful!</Alert.Heading>\n            <p>\n            We'll see you soon! 🌱\n            </p>\n        </Alert>\n        );\n    }\n\n    const onSuccess = () => {\n        console.log(\"Logout successful\");\n        setShow(true)\n        \n    };\n\n    return(\n        <div>\n            <GoogleLogout \n            clientId={clientId}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onSuccess}\n            style={{\n                scope: \"profile\",\n                width: \"240\",\n                height: \"50\",\n                'longtitle': \"true\",\n                theme: \"dark\"\n            }}\n        ></GoogleLogout>\n        </div>\n    );\n\n}\n\nexport default Logout;","import React from \"react\";\n\nfunction Button(props) {\n\n    return (\n        <div>\n            <button type=\"button\" id={props.id} className={props.className} onClick={props.onClick}>{props.text}</button>\n        </div>\n    )\n\n}\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport useDebounce from \"./use-debounce\";\nimport { gsap, TimelineLite, Power3 } from 'gsap';\nimport Logout from './Logout';\nimport API from '../utils/API';\nimport Button from \"../components/Button\";\nimport e from 'cors';\n\nfunction Navbar(props) {\n\n    // State and setter for search term\n    const [searchTerm, setSearchTerm] = useState('');\n    \n    // Now we call our hook, passing in the current searchTerm value.\n    // The hook will only return the latest value (what we passed in) ...\n    // ... if it's been more than 500ms since it was last called.\n    // Otherwise, it will return the previous value of searchTerm.\n    // The goal is to only have the API call fire when user stops typing ...\n    // ... so that we aren't hitting our API rapidly.\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\n\n    // Here's where the API call happens\n    // We use useEffect since this is an asynchronous action\n    useEffect(\n      () => {\n        const plantName = debouncedSearchTerm;\n        // Make sure we have a value (user has entered something in input)\n        if (debouncedSearchTerm) {\n          // Set isSearching state\n          props.setIsSearching(true);\n          props.setUserGarden(true);\n          // Fire off our API call\n          API.searchPlants(plantName).then(results => {\n            // Set back to false since request finished\n            props.setIsSearching(true);\n            // Set results state\n            props.setResults(results.data);\n            // props.setIsSearching(false);\n            props.setUserGarden(false);\n          \n          });\n        } else {\n          props.setResults([]);\n        }\n      },\n      // This is the useEffect input array\n      // Our useEffect function will only execute if this value changes ...\n      // ... and thanks to our hook it will only change if the original ...\n      // value (searchTerm) hasn't changed for more than 500ms.\n      [debouncedSearchTerm]\n    );\n      function getSearchTerm (e){\n        e.preventDefault();\n        setSearchTerm(e.target.value)\n        console.log(\"this is this\")\n      }\n\n    let tl = new TimelineLite({ delay: 0.8 })\n\n    useEffect(() => {\n\n        tl.from('.homes', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.1 }, 'Start')\n        tl.from('.search', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.2 }, 'Start')\n        tl.from('.contact', { x: 15, opacity: 0, ease: Power3.easeOut, delay: 0.3 }, 'Start')\n    }, []);\n\n    return (\n      <div>\n      <nav id=\"navbar\" className=\"navbar navbar-expand-lg navbar-light bg-light mt-n5\">\n        <a id=\"navbar-title\" className=\"navbar-brand homes text-success\" href=\"#\">inBloom</a>\n        {/* {props.userGarden && <button>Back to Garden</button>}   */}\n        {!props.userGarden && <Button text=\"Back to Garden\" id=\"back-to-garden-btn\" className=\"btn btn-outline-success\" onClick={props.handleGetPlants}/>}\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n          \n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            \n            <li className=\"nav-item active search\">\n            <form className=\"form-inline\" onSubmit={e => e.preventDefault()}>\n                <div className=\"form-group mx-sm-3 mb-2\">\n                  <label htmlFor=\"plantSearch\" className=\"sr-only\">Search : </label>\n                  <input type=\"search\" className=\"form-control\" id=\"plantSearch\" placeholder=\"Search by plant name...\" onChange={e => getSearchTerm(e)}/>\n                  {props.isSearching && <div> Searching... </div>}\n                 \n                </div>\n            </form>\n            </li>\n            <li className=\"nav-item contact\">\n              <Logout\n              user={props.user}\n              setUser={props.setUser}\n              />\n            </li>\n          </ul>\n        </div>\n      </nav>\n    \n      {props.isSearching &&\n        <div className=\"mx-auto text-center sublead\">    \n        <h1><b>Search Results</b></h1>\n        </div>\n      }\n      </div>\n    )\n};\n\nexport default Navbar;\n","import React, {useState, useEffect} from \"react\";\n\n// Our hook\nexport default function useDebounce(value, delay) {\n\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect (\n        () => {\n            // Set debouncedValue to value (passed in) after the specified delay\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            // Return a cleanup function that will be called every time ...\n            // ... useEffect is re-called. useEffect will only be re-called ...\n            // ... if value changes (see the inputs array below). \n            // This is how we prevent debouncedValue from changing if value is ...\n            // ... changed within the delay period. Timeout gets cleared and restarted.\n            // To put it in context, if the user is typing within our app's ...\n            // ... search box, we don't want the debouncedValue to update until ...\n            // ... they've stopped typing for more than 500ms.\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        // Only re-call effect if value changes\n        // You could also add the \"delay\" var to inputs array if you ...\n        // ... need to be able to change that dynamically.\n        [value]\n    );\n\n    return debouncedValue;\n}","import React from \"react\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\nfunction AddPlantBtn(props) {\n    const [buttonMsg, setButtonMsg] = React.useState(\"Add to Your Garden\");\n\n    let data = {\n        common_name: props.displayname,\n        image_url: props.img,\n        trefle_id: props.plant.id,\n        UserId: props.userId\n    }\n\n    function onClick () {\n        API.addPlant(data).then(res=>{\n            console.log(res.data.common_name + \" added to your garden!\");\n            // we should add a toast or popup to show that the plant was added to the user's garden\n        })\n        setButtonMsg(\"Added Successfully!\")\n\n    };\n      \n    return (\n        <div>\n            <button className=\"Btn btn sublead\" onClick={() => onClick()} >{buttonMsg}</button>\n        </div>\n    )\n\n}\n\nexport default AddPlantBtn;","import React from \"react\";\n\nfunction InfoContainer(props) {\n  console.log(props);\n\n  return (\n    <div>\n      {props && (\n        <div>\n          <h5 className=\"sublead\"><b>General Info</b></h5>\n          <ul className=\"text-left sublead\">\n            {props.edible && <li>Edible: {props.edible}</li>}\n            {props.flower && <li>Flower: {props.flower}</li>}\n            {props.growthform && <li>Growth Form: {props.growthform}</li>}\n            {props.growthhabit && <li>Growth Habit: {props.growthhabit}</li>}\n            {props.growthrate && <li>Growth Rate: {props.growthrate}</li>}\n            {props.avgheight && <li>Average Height: {props.avgheight}</li>}\n            {props.maxheight && <li>Maximum Height: {props.maxheight}</li>}\n            {props.toxicity && <li>Toxicity: {props.toxicity}</li>}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default InfoContainer;\n","import React from \"react\";\n\nfunction CareContainer(props) {\n  console.log(props);\n\n  return (\n    <div>\n      {props && (\n        <div>\n          <h4 className=\"sublead\"><b>Care Info</b></h4>\n          <ul className=\"text-left sublead\">\n          {(props.phmin && props.phmax) && <li>pH Range: {props.phmin} - {props.phmax}</li>}\n            {props.light && <li>Light: {props.light}</li>}\n            {props.bloommonths && <li>Bloom Months: {props.bloommonths}</li>}\n            {props.growthmonths && <li>Growth Months: {props.growthmonths}</li>}\n            {props.humidity && <li>Humidity: {props.humidity}</li>}\n            {(props.minwater && props.maxwater) && <li>Precipitation Range: {props.minwater}mm - {props.maxwater}mm</li>}\n            {props.rootdepth && <li>Minimum Root Depth: {props.rootdepth}cm</li>}\n            {(props.mintemp && props.maxtemp) && <li>Temperature Range: {props.mintemp}ºF - {props.maxtemp}ºF</li>}\n            {props.soilnutriments && <li>Soil Nutriments: {props.soilnutriments} (pH Level)</li>}\n            {props.soilsalinity != null && <li>Soil Salinity: {props.soilsalinity}</li>}\n            {props.soiltexture && <li>Soil Texture: {props.soiltexture}</li>}\n            {props.soilhumidity && <li>Soil Humidity: {props.soilhumidity}</li>}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default CareContainer;\n","import React from \"react\";\nimport AddPlantBtn from \"./AddPlantBtn\";\nimport InfoContainer from \"./InfoContainer\";\nimport Modal from \"react-bootstrap/Modal\";\nimport CareContainer from \"./CareContainer\";\nimport \"../App.css\";\n\nfunction PlantInfo(props) {\n  let sciName = \"\";\n  let edible = \"\";\n  let toxicity = \"\";\n\n  let plantData = {};\n  if (props.plantres) {\n    plantData = props.plantres;\n    if (props.plantres.data.common_name === null) {\n      sciName = \"\";\n    } else {\n      sciName = \"(\" + props.plantres.data.scientific_name + \")\";\n    }\n    if (props.plantres.data.main_species.edible === true) {\n      edible = \"Yes\";\n    } else if (!props.plantres.data.main_species.edible) {\n      edible = null;\n    } else {\n      edible = \"No\";\n    }\n    if (props.plantres.data.main_species.toxicity === true) {\n      toxicity = \"Yes\";\n    } else if (!props.plantres.data.main_species.toxicity) {\n      toxicity = null;\n    } else {\n      toxicity = \"No\";\n    }\n  } else {\n    plantData = null;\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      className=\"infoModal rounded mb-0\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\" className=\"lead mx-auto\">\n          {props.displayname} {sciName}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <img src={props.img} alt=\"plant\" style={{ width: \"400px\" }} className=\"text-center modalPhoto\"></img>\n        <InfoContainer\n          id=\"infoContainer\" className=\"text-center\"\n          edible={edible}\n          // distribution={props.plantres.data.main_species.native}\n          flower={props.plantres.data.main_species.flower.color}\n          growthform={\n            props.plantres.data.main_species.specifications.growth_form\n          }\n          growthhabit={\n            props.plantres.data.main_species.specifications.growth_habit\n          }\n          growthrate={\n            props.plantres.data.main_species.specifications.growth_rate\n          }\n          avgheight={\n            props.plantres.data.main_species.specifications.average_height.cm\n          }\n          maxheight={\n            props.plantres.data.main_species.specifications.maximum_height.cm\n          }\n          toxicity={toxicity}\n        ></InfoContainer>\n        <CareContainer\n          id=\"careContainer\"\n          phmax={props.plantres.data.main_species.growth.ph_maximum}\n          phmin={props.plantres.data.main_species.growth.ph_minimum}\n          bloommonths={props.plantres.data.main_species.growth.bloom_months}\n          light={props.plantres.data.main_species.growth.light}\n          growthmonths={props.plantres.data.main_species.growth.growth_months}\n          humidity={\n            props.plantres.data.main_species.growth.atmospheric_humidity\n          }\n          minwater={\n            props.plantres.data.main_species.growth.minimum_precipitation.mm\n          }\n          maxwater={\n            props.plantres.data.main_species.growth.maximum_precipitation.mm\n          }\n          rootdepth={props.plantres.data.main_species.growth.minimum_root_depth.cm}\n          mintemp={props.plantres.data.main_species.growth.minimum_temperature.deg_f}\n          maxtemp={props.plantres.data.main_species.growth.maximum_temperature.deg_f}\n          soilnutriments={\n            props.plantres.data.main_species.growth.soil_nutriments\n          }\n          soilsalinity={props.plantres.data.main_species.growth.soil_salinity}\n          soiltexture={props.plantres.data.main_species.growth.soil_texture}\n          soilhumidity={props.plantres.data.main_species.growth.soil_humidity}\n        ></CareContainer>\n      </Modal.Body>\n      <Modal.Footer>\n        <button onClick={props.onHide} className=\"Btn sublead\">Close</button>\n        {props.addbtn === \"yes\" &&\n          <AddPlantBtn \n          displayname={props.displayname}\n          image_url={props.img}\n          plant={props.plantres}\n          userId={props.user}/>\n        }\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default PlantInfo;\n","import React from \"react\";\nimport PlantInfo from \"./PlantInfo\";\nimport API from \"../utils/API\";\nimport \"../App.css\";\n\n\nfunction MoreInfoBtn(props) {\n    const [modalShow, setModalShow] = React.useState(false);\n    const [plantRes, setPlantRes] = React.useState();\n\n    \n    let plantID;\n    let addBtn;\n\n    if (props.trefle_id) {\n        plantID = props.trefle_id;\n        addBtn = \"no\"\n    } else {\n        plantID = props.plantId;\n        addBtn= \"yes\"\n    }\n  \n\n    function getInfo () {\n        API.plantDetail(plantID).then(result => {\n            setPlantRes(result);  \n        })\n    }\n return (\n   <div>\n     <button className=\"Btn btn sublead\" onClick={() => [setModalShow(true), getInfo()]}>\n       More Info\n     </button>\n        {plantRes &&\n          <PlantInfo show={modalShow}\n            onHide={() => setModalShow(false)}\n            plantres={plantRes}\n            displayname={props.displayname}\n            img={props.img}\n            user={props.user}\n            addbtn={addBtn}\n          />\n        }\n   </div>\n );\n}\n \nexport default MoreInfoBtn;\n","import React from \"react\";\nimport MoreInfoBtn from \"./MoreInfoBtn\";\nimport AddPlantBtn from \"./AddPlantBtn\";\nimport fakeImg from \"../images/planty.jpg\";\n\nfunction SearchCard(props) {\n  let displayname;\n  let img;\n\n  if (props.plant.common_name) {\n    displayname = props.plant.common_name;\n  } else {\n    displayname = props.plant.scientific_name;\n  }\n\n  if (!props.plant.image_url) {\n    img = fakeImg;\n  } else {\n    img = props.plant.image_url;\n  }\n  \n  return (\n    <div id=\"search-card\"\n      className=\"card m-2 p-2\"\n      key={props.plant.id}\n      style={{ width: \"350px\" }}\n    >\n      <h3 className=\"card-title\"><b>{displayname}</b></h3>\n      <img\n        src={img}\n        className=\"card-img-top mx-auto\"\n        alt={props.plant.scientific_name}\n        style={{ height: \"350px\" }}\n      />\n      \n      <AddPlantBtn\n        plant={props.plant}\n        displayname={displayname}\n        userId={props.user}\n        img={img}\n      />\n      \n      <MoreInfoBtn\n        plant={props.plant}\n        plantId={props.plant.id}\n        displayname={displayname}\n        img={img}\n        user={props.user}\n      />\n    </div>\n  );\n}\n\nexport default SearchCard;\n","import React from \"react\";\nimport MoreInfoBtn from \"./MoreInfoBtn\";\nimport fakeImg from \"../images/planty.jpg\";\n\nfunction GardenCard(props) {\n  let displayname;\n  let img;\n\n  if (props.plant.common_name) {\n    displayname = props.plant.common_name;\n  } else {\n    displayname = props.plant.scientific_name;\n  }\n\n  if (!props.plant.image_url) {\n    img = fakeImg;\n  } else {\n    img = props.plant.image_url;\n  }\n  \n  return (\n    <div\n      className=\"card m-4 p-4\"\n      key={props.plant.trefle_id}\n      style={{ width: \"350px\" }}\n    >\n      <h3 className=\"card-title\"><b>{displayname}</b></h3>\n      <img\n        src={img}\n        className=\"card-img-top mx-auto\"\n        alt={props.plant.scientific_name}\n        style={{ height: \"350px\" }}\n      />\n      <MoreInfoBtn\n        plant={props.plant}\n        trefle_id={props.plant.trefle_id}\n        displayname={displayname}\n        img={img}\n        user={props.user}\n      />\n    </div>\n  );\n}\n\nexport default GardenCard;\n","import React, { useState, useEffect } from \"react\";\nimport gsap from \"gsap\";\nimport Navbar from \"../components/Navbar\";\nimport SearchCard from \"../components/SearchCard\";\nimport GardenCard from \"../components/GardenCard\";\nimport yourgarden from \"../images/yourgarden.png\";\nimport API from \"../utils/API\";\n\nfunction Garden(props) {\n\n     // State and setter for search results\n   const [results, setResults] = useState([]);\n   const [isSearching, setIsSearching] = useState(false);\n   const [userGarden, setUserGarden] = useState(true);\n   const [garden, setGarden] = useState([]);\n   \n   useEffect(() => {\n      console.log(props.user.id)\n      // API.searchUserById(props.user.id)\n      //    .then(res => {\n      //       setResults(res.data.Plants)\n      //    })\n      handleGetPlants();\n   }, [])\n \n   const handleGetPlants = () => {\n      API.searchUserById(props.user.id)\n      .then(results => {\n         setGarden(results.data.Plants);\n         setIsSearching(false);\n         setUserGarden(true);\n     });\n   }\n\n\n\n   \n   console.log(results)\n\n// gsap code for plant cards coming in from right \n\n\nuseEffect(() => {\n\ngsap.from('#plant-cards', {duration: 3, x:300, opacity:0})\n\n\n},\n[]);\n\n\n\n   return (\n      <div className=\"garden-body\">\n         <div className=\"jumbotron garden-jumbo\">\n            <img className=\"gardenHeader\" src={yourgarden}></img>\n         </div>\n         <Navbar setResults={setResults} \n            results={results} \n            isSearching={isSearching}\n            setIsSearching={setIsSearching} \n            setUserGarden={setUserGarden} \n            userGarden={userGarden} \n            handleGetPlants={handleGetPlants}\n            user={props.user}\n            setUser={props.setUser} \n         /> \n         \n         <div id=\"plant-cards\" className=\"row p-3 mb-5 col-md-10 mx-auto\">\n            \n            {isSearching && results.map(result => (\n                     \n               <SearchCard key={result.id} plant={result} user={props.user.id} userGarden={userGarden} />\n                  \n            ))}\n         </div>\n      \n         <div id=\"saved-plants\" className=\"container row p-5 m-3 mx-auto col-md-8\">\n            {garden.map(result => (\n               <GardenCard key={result.id} plant={result} user={props.user.id} userGarden={userGarden} />\n            ))}\n         </div>\n         \n      </div>\n   )\n\n};\n\nexport default Garden;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\"\n\nfunction NewUser() {\n\n    return(\n        <div>\n            <Navbar/>\n        <div className=\"container\">\n            <h1 className=\"text-center m-2\">Welcome to inBloom!</h1>\n            <div className=\"input-group mb-3\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"First Name\" aria-label=\"Username\"/>\n            </div>\n            <div className=\"input-group mb-3\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Last Name\" aria-label=\"Recipient's username\"/>\n            </div>\n            <button className=\"btn btn-outline-success\">\n                <Link to={\"/search\"} /> \n                    Add your plants!\n            </button>\n        </div>\n        </div>\n    )\n\n\n        //like a step by step form group??\n        //1. Go to the search plants page\n        //2. Either submit a photo to search or search by \"common name??\"\n        //3. Find your plant and then add it to your garden.\n    \n}\n\nexport default NewUser;","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport './App.css';\nimport PlantsPage from \"./pages/Garden\";\nimport NewUser from \"./pages/NewUser\";\n\nfunction App() {\n\n  const [user, setUser] = useState();\n  useEffect(() => {\n    setUser(JSON.parse(sessionStorage.getItem('userData')))\n  }, [])\n\n  return (\n    <Router>\n      <div>\n        {/* <Nav /> */}\n        {/* <nav>\n          <ul>\n            <li className='nav-item'>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li className='nav-item'>\n              <Link to=\"/plants\">Plants</Link>\n            </li>\n            <li className='nav-item'>\n              <Link to=\"/newuser\">Users</Link>\n            </li>\n          </ul>\n        </nav> */}\n\n\n        {/*  if they're not logged in */}\n        \n       { !user && <Switch> \n          <Route exact path={\"/\"}>\n            <Home setUser={setUser} user={user}/>\n          </Route>\n          <Route exact path={\"/newuser\"}>\n            <NewUser />\n          </Route>\n        </Switch>}\n\n        {/* if they're logged in they can access this */}\n\n        {user && <Switch>\n          <Route exact path={\"/\"}>\n            {/* <Home user={user}/> */}\n            <PlantsPage setUser={setUser} user={user}/>\n            {/* <Link to=\"/plants\">Plants</Link> */}\n          </Route>\n          {/* <Route exact path={\"/plants\"}>\n            <PlantsPage setUser={setUser} user={user}/>\n          </Route> */}\n          \n          </Switch>}\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}